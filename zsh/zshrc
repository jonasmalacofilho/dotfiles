# Essential behavior
export PATH=$HOME/bin:/usr/local/bin:$PATH
export VISUAL=nvim EDITOR=nvim          # use nvim everywhere
alias sudo='sudo '                      # keep all aliases when sudo


# Start Oh My Zsh
COMPLETION_WAITING_DOTS="true"          # indicate when waiting on completion
DISABLE_AUTO_UPDATE="true"              # let me update oh-my-zsh
DISABLE_UNTRACKED_FILES_DIRTY="true"    # make vcs status check much faster
HIST_STAMPS="yyy-mm-dd"                 # use unambiguous timestamps
plugins=(
	git                             # useful git aliases (!completion)
	wd                              # warp to frequent directories
)
ZSH_THEME="afowler"
export ZSH=$HOME/.oh-my-zsh
source $ZSH/oh-my-zsh.sh


# Enable completion from --help for more commands
compdef _gnu_generic liquidctl


# Ungrouped aliases
alias _!='sudo $(fc -ln -1)'            # sudo last command
alias f='fg'
alias jd='journalctl'
alias jo='xdg-open'                     # [j]ust [o]pen with default handler
alias r='ranger'
alias sd='systemctl'
alias vim='vi'
alias vi='v'
alias v='nvim'
alias icat='kitty +kitten icat'


# More [g]it
alias gcd='git checkout development'
alias gcds='git checkout staging'


# Aliases for [t]ree
alias t1='tree -L 1'
alias t2='tree -L 2'
alias t3='tree -L 3'
alias t4='tree -L 4'
alias ta='tree'


# Utilities for conferencing
alias mutemic='pactl set-source-mute @DEFAULT_SOURCE@ 0'
alias unmutemic='pactl set-source-mute @DEFAULT_SOURCE@ 0'
alias videochat='unmutemic && V4L2_OPTS=exclusive_caps=1 run-videochat -p 9009 -w 1280 -h 720 -C -s -v && mutemic'


# Interactive-by-default alias to vgrep
function vg() {
	vgrep "$@" && vgrep --interactive
}


# Utilities for consistency
_CONSIST=(broccoli)
function begin_session() {
	for task in "${_CONSIST[@]}"; do
		echo "Updating ${task}"

		wd "$task" || continue

		git pull

		cd - >/dev/null
	done
}
function end_session() {
	dirty=()
	for task in "${_CONSIST[@]}"; do
		echo "Checking ${task}"

		wd "$task" || continue

		git status --short
		if [ -n "$(parse_git_dirty)" ]; then
			dirty+=("$task")
		else
			git push
		fi

		cd - >/dev/null
	done
	if [ ${#dirty[*]} -gt 0 ]; then
		echo "Summary: commits needed in: ${dirty}"
	else
		echo "Summary: everything appears to be ok"
	fi
}


# Utilities for ArchLinux
function update_pacman_mirrors() {
	country=${1:-BR}
	limit_to=${2:-3}
	timeout=${3:-2}
	echo ":: Getting ranked and up-to-date pacman mirrorlist for ${country}..."
	curl -s "https://archlinux.org/mirrorlist/?country=${country}&protocol=http&protocol=https&ip_version=4&ip_version=6&use_mirror_status=on" |
		sed -e 's/^#Server/Server/' -e '/^#/d' |
		rankmirrors -n "$limit_to" -m "$timeout" -r "extra" -v - |
		sudo tee /etc/pacman.d/mirrorlist
}
function list_packages_by_size() {
	# from: https://bbs.archlinux.org/viewtopic.php?pid=1585788#p1585788
	pacman -Qi | egrep '^(Name|Installed)' | cut -f2 -d':' | paste - - | column -t | sort -nrk 2 | grep MiB | less
}
function pacupdate {
	update_pacman_mirrors "$@"
	sudo pacman -Syu
	sudo pacdiff
}


# Utilities for the Linux Kernel
function unbind_device() {
	[ $# -ne 3 ] && { echo "Usage: unbind_device <dev> <bus> <drv>"; return 1; }
	echo "Unbinding $1 from /sys/$2/drivers/$3"
	echo $1 | sudo tee "/sys/bus/$2/drivers/$3/unbind" >/dev/null
}
function bind_device() {
	[ $# -ne 3 ] && { echo "Usage: bind_device <dev> <bus> <drv>"; return 1; }
	echo "Binding $1 from /sys/$2/drivers/$3"
	echo $1 | sudo tee "/sys/bus/$2/drivers/$3/bind" >/dev/null
}
function rebind_device() {
	[ $# -ne 3 ] && { echo "Usage: rebind_device <dev> <bus> <drv>"; return 1; }
	unbind_device "$@"
	bind_device "$@"
}


# Utilities for Haxe
function switch_haxe_to() {
	[ $# -ne 1 ] && { echo "Usage: switch_haxe_to <version>"; return 1; }
	haxepath="/opt/haxe/haxe-$1"
	if [ ! -d "$haxepath" ]; then
		echo "No binaries available for Haxe $1"
		return 2
	fi
	echo "Setting Haxe to $1 in this shell"
	export PATH=$haxepath:$PATH
	export HAXE_STD_PATH=$haxepath/std
}


if [ -n "${GNOME_TERMINAL_SERVICE+x}" ]; then
	# Communicate the current directory (among, possibly, other things) when
	# splitting Gnome Terminal instances
	# (see: https://gnunn1.github.io/tilix-web/manual/vteconfig/)
	source /etc/profile.d/vte.sh
fi
