#!/bin/bash
#
# Apply static settings to my liquidctl devices.

# we actually want to propagate spaces in $LL, $KRAKEN, etc.
# shellcheck disable=SC2086

set -e

LL="liquidctl $EXTRAOPTIONS"
KRAKEN="--match kraken"
SMART_DEVICE="--match smart"
GPU="--match 1080 --unsafe smbus"
RAM="--match vengeance --unsafe smbus,vengeance_rgb"
TEST_CLC120="--vendor 0x2433 --product 0xb200"

function panic() {
	set +ex
	code=$?
	$LL $KRAKEN set fan speed 100
	$LL $KRAKEN set pump speed 100
	$LL $CLC set fan speed 100
	$LL $CLC set pump speed 100
	exit $code
}

function show_help() {
	echo "Usage:"
	echo " $0 [options]"
	echo
	echo "Apply static settings to my liquidctl devices."
	echo
	echo "Options:"
	echo "--profile <profile>  Set cooling profile [default: balanced]"
	echo "--verbose	           List all devices and commands."
	echo "--help	           Show this help"
}

verbose=0
profile="balanced"

OPTS=$(getopt -o ab:Cd:f:h:l:i:p:svw:x --long profile:,verbose,help -n "$0" -- "$@")
eval set -- "$OPTS"

while true; do
	case "$1" in
		--profile ) profile="$2"; shift 2;;
		--verbose ) verbose=1; shift;;
		--help ) show_help; exit;;
		-- ) shift; break;;
		* ) echo "Unrecognized option: $1" ; show_help; exit 1 ;;
	esac
done

if [ "$verbose" -ne 0 ]; then
	set -x
	$LL --version
	$LL list --verbose
fi

echo "Initializing Kraken"
$LL $KRAKEN initialize || panic
# don't initialize SMART_DEVICE, recent grdp3 kernel driver already does that
# $LL $SMART_DEVICE initialize || panic

echo "Applying $profile cooling profile to Kraken and Smart Device"
if [ "$profile" = balanced ]; then
	$LL $KRAKEN set fan speed 25 60 35 90 40 100 || panic
	$LL $KRAKEN set pump speed 25 60 35 90 40 100 || panic
	$LL $SMART_DEVICE set fan1 speed 45 || panic
	$LL $SMART_DEVICE set fan2 speed 40 || panic
	$LL $SMART_DEVICE set fan3 speed 50 || panic
elif [ "$profile" = silent ]; then
	$LL $KRAKEN set fan speed 20 25 35 85 39 85 40 100 || panic
	$LL $KRAKEN set pump speed 24 50 35 85 39 85 40 100 || panic
	$LL $SMART_DEVICE set sync speed 40 || panic
elif [ "$profile" = extreme ]; then
	$LL $KRAKEN set fan speed 39 90 40 100 || panic
	$LL $KRAKEN set pump speed 39 90 40 100 || panic
	$LL $SMART_DEVICE set sync speed 55 || panic
fi

echo "Applying lighting profile to all devices"
$LL $KRAKEN set sync color fixed "hsv(210, 100, 100)"
$LL $GPU set led color fixed "hsv(110, 100, 100)"
# $LL $RAM --pick 1 set led color fixed "hsv(5, 100, 67)"  # persisted
# $LL $RAM --pick 2 set led color fixed "hsv(5, 100, 67)"  # persisted
$LL $SMART_DEVICE set led color moving-alternating 'hsv(30,98,100)' 'hsv(30,98,10)' --speed slower  # xmas

if liquidctl list $TEST_CLC120 2>/dev/null | grep "Asetek 690LC"; then
	echo "Applying EVGA CLC settings"
	$LL $TEST_CLC120 initialize || panic
	$LL $TEST_CLC120 set fan speed 20 || panic
	$LL $TEST_CLC120 set pump speed 50 || panic
	$LL $TEST_CLC120 set led color blackout || panic
else
	echo "Skipping EVGA CLC configuration (reason: not present)"
fi
