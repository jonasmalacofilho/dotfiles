#!/bin/bash
#
# Apply static settings to my liquidctl devices.

# we actually want to propagate spaces in $LL, $KRAKEN, etc.
# shellcheck disable=SC2086

set -e

LL="liquidctl $EXTRAOPTIONS"
KRAKEN="--vendor 0x1e71 --product 0x170e"
SMART_DEVICE="--vendor 0x1e71 --product 0x1714"
CLC="--vendor 0x2433 --product 0xb200"

function panic() {
	set +ex
	code=$?
	$LL $KRAKEN set fan speed 100
	$LL $KRAKEN set pump speed 100
	$LL $CLC set fan speed 100
	$LL $CLC set pump speed 100
	exit $code
}

function show_help() {
	echo "Usage:"
	echo " $0 [options]"
	echo
	echo "Apply static settings to my liquidctl devices."
	echo
	echo "Options:"
	echo "--profile <profile>  Set cooling profile [default: balanced]"
	echo "--verbose	           List all devices and commands."
	echo "--help	           Show this help"
}

verbose=0
profile="balanced"

OPTS=$(getopt -o ab:Cd:f:h:l:i:p:svw:x --long profile:,verbose,help -n "$0" -- "$@")
eval set -- "$OPTS"

while true; do
	case "$1" in
		--profile ) profile="$2"; shift 2;;
		--verbose ) verbose=1; shift;;
		--help ) show_help; exit;;
		-- ) shift; break;;
		* ) echo "Unrecognized option: $1" ; show_help; exit 1 ;;
	esac
done

if [ "$verbose" -ne 0 ]; then
	set -x
	$LL --version
	$LL list --verbose
fi

echo "Initializing Kraken"
$LL $KRAKEN initialize || panic
# don't initialize SMART_DEVICE, recent grdp3 kernel driver already does that
# $LL $SMART_DEVICE initialize || panic

echo "Applying $profile profile to Kraken and Smart Device"
if [ "$profile" = balanced ]; then
	$LL $KRAKEN set fan speed 20 25 35 85 39 85 40 100 || panic
	$LL $KRAKEN set pump speed 24 50 35 85 39 85 40 100 || panic
	$LL $SMART_DEVICE set fan1 speed 40 || panic
	$LL $SMART_DEVICE set fan2 speed 35 || panic
	$LL $SMART_DEVICE set fan3 speed 45 || panic
elif [ "$profile" = silent ]; then
	$LL $KRAKEN set fan speed 39 60 40 100 || panic
	$LL $KRAKEN set pump speed 39 60 40 100 || panic
	$LL $SMART_DEVICE set sync speed 35 || panic
elif [ "$profile" = extreme ]; then
	$LL $KRAKEN set fan speed 39 90 40 100 || panic
	$LL $KRAKEN set pump speed 39 90 40 100 || panic
	$LL $SMART_DEVICE set sync speed 55 || panic
fi

set +e
liquidctl list $CLC 1>/dev/null 2>/dev/null | grep "Asetek 690LC"
MISSING_EVGA_CLC=$?
set -e

if [ "$MISSING_EVGA_CLC" -eq 0 ]; then
	echo "Applying EVGA CLC settings"
	$LL $CLC initialize || panic
	$LL $CLC set fan speed 20 || panic
	$LL $CLC set pump speed 50 || panic
	$LL $CLC set led color blackout || panic
else
	echo "Skipping EVGA CLC configuration (reason: not present)"
fi
